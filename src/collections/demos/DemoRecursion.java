package collections.demos;

import collections.lists.*;

public class DemoRecursion {
    public static void main(String[] args) {
        System.out.println("Demo Recursion");
        System.out.println("--------------");
        System.out.println("OrderedLinkedList");
        System.out.println();
        OrderedLinkedList<Integer> list = new OrderedLinkedList<>();
        list.add(10);
        list.add(5);
        list.add(30);
        list.add(3);
        System.out.println("Printing ordered list recursively:");
        Recursion.printRecursiveList(list);
        System.out.println("\nOriginal List: " + list);
        Recursion.reverse(list);
        System.out.println("Reversed List: " + list);
        System.out.println("--------------");
        System.out.println("UnorderedLinkedList");
        System.out.println();
        UnorderedLinkedList<Integer> list2 = new UnorderedLinkedList<>();
        list2.addToFront(1);
        list2.addToFront(2);
        list2.addToFront(3);
        list2.addToFront(4);
        list2.addToRear(5);
        System.out.println("Printing unordered list recursively:");;
        Recursion.printRecursiveList(list2);
        System.out.println("\nOriginal List: " + list2);
        Recursion.reverse(list2);
        System.out.print("Reversed List: " + list2);
        System.out.println("\n--------------");
        System.out.println("DoubleLinkedOrderedList");
        DoubleLinkedOrderedList<Integer> list3 = new DoubleLinkedOrderedList<>();
        list3.add(1);
        list3.add(2);
        list3.add(3);
        list3.add(4);
        System.out.print("Forward: ");
        Recursion.printForward(list3);
        System.out.print("Backward: ");
        Recursion.printBackward(list3);
        System.out.println("\nOriginal List: " + list3);
        Recursion.reverse(list3);
        System.out.print("Reversed List: " + list3);
        System.out.println("\n--------------");
        System.out.println("DoubleLinkedUnorderedList");
        DoubleLinkedUnorderedList<Integer> list4 = new DoubleLinkedUnorderedList<>();
        list4.addToFront(1);
        list4.addToFront(2);
        list4.addToFront(3);
        list4.addToFront(4);
        list4.addToRear(5);
        System.out.print("Forward: ");
        Recursion.printForward(list4);
        System.out.print("Backward: ");
        Recursion.printBackward(list4);
        System.out.println("\nOriginal List: " + list4);
        Recursion.reverse(list4);
        System.out.println("Reversed List: " + list4);
        System.out.println("\n--------------------------------");

        /* How to use replace method */
        System.out.println("----How to use replace method----");
        System.out.println("---------------------------------");
        System.out.println("OrderedLinkedList");
        OrderedLinkedList<String> list5 = new OrderedLinkedList<>();
        list5.add("Ferrari");
        list5.add("Lamborghini");
        list5.add("Audi");
        list5.add("Mercedes");
        list5.add("Porsche");
        //list5.add(15);
        //list5.add(23);
        //list5.add(34);
        //list5.add(47);
        //list5.add(50);
        System.out.println("Original List: " + list5);
        Recursion.replace(list5,"Mercedes", "Buggati");
        //Recursion.replace(list5,23, 10);
        System.out.println("Replaced List: " + list5);
        System.out.println("---------------------------------");
        System.out.println("UnorderedLinkedList");
        UnorderedLinkedList<Integer> list6 = new UnorderedLinkedList<>();
        //list6.addToFront("Ferrari");
        //list6.addToFront("Lamborghini");
        //list6.addToFront("Audi");
        //list6.addToFront("Mercedes");
        //list6.addToFront("Porsche");
        list6.addToFront(10);
        list6.addToFront(20);
        list6.addToFront(30);
        list6.addToFront(40);
        list6.addToFront(50);
        System.out.println("Original List: " + list6);
        //recursion.replace(list6,"Mercedes", "BMW");
        Recursion.replace(list6, 20, 15);
        System.out.println("Replaced List: " + list6);
        System.out.println("---------------------------------");
    }
}
